
import numpy as np

from nnenum.lpinstance import LpInstance

lpi = LpInstance()

lpi.lp = (
    [0.04864749684929848, -0.01757809706032276, -0.17345963418483734, -0.9826385378837585, -0.0407162681221962,
     0.4536316990852356, -0.1982513815164566, -0.5648610591888428, 0.6599723696708679, -0.016828561201691628,
     -0.05371265485882759, -0.09199603646993637, 0.06838224083185196, 0.991743266582489, -0.020513953641057014,
     0.8469746112823486, -0.3263065218925476, 0.32752013206481934, 0.06199650466442108, -0.25503942370414734,
     -0.06426270306110382, -0.054490767419338226, 0.982328474521637, 0.15956541895866394, 0.04970501735806465,
     -0.27481338381767273, 0.23421965539455414, 0.30147749185562134, 0.747488260269165, -0.46903231739997864,
     0.16181759536266327, -0.041498687118291855, 0.056704867631196976, -0.9841556549072266, 0.017749551683664322,
     0.14756521582603455, -0.22544756531715393, -0.8337231874465942, -0.48134520649909973, 0.024706074967980385,
     0.13338515162467957, 0.0015116985887289047, 0.6001701951026917, 0.47933512926101685, -0.6262904405593872,
     -0.5257245898246765, 0.4158400893211365, 0.15986143052577972, 0.691771924495697, 0.2158391922712326,
     -0.0926082506775856, 0.011573733761906624, -0.07388503104448318, 0.9861070513725281, -0.11586035788059235,
     0.602049708366394, -0.4677243232727051, -0.2943362295627594, -0.41899874806404114, -0.3956971764564514,
     -0.06426925212144852, -0.05448075756430626, 0.9823279976844788, 0.1595783829689026, 0.04967666417360306,
     0.8470733165740967, -0.32620829343795776, 0.3273952007293701, 0.06201716139912605, -0.25499242544174194,
     -0.45361119508743286, 0.1982090324163437, 0.5648705363273621, -0.659990668296814, 0.01684524491429329],
    [5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1],
    [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75],
    [-0.06928084790706635, 0.009916311129927635, 0.08646398037672043, -0.006437735166400671, 0.06931018829345703, 0.10731283575296402, -0.0713353231549263, -0.09997757524251938, 0.044224679470062256, 0.1301191747188568, 0.07082317024469376, -0.11029086261987686, 0.06929231435060501, -0.006437124218791723, -0.009919529780745506],
    [(0.0, 0.1), (0.0, 0.1), (0.0, 0.1), (0.0, 0.1), (0.0, 0.1)])
#lpi.lp = ([0.04864749684929848, -0.01757809706032276, -0.17345963418483734, -0.9826385378837585, -0.0407162681221962, 0.4536316990852356, -0.1982513815164566, -0.5648610591888428, 0.6599723696708679, -0.016828561201691628, -0.05371265485882759, -0.09199603646993637, 0.06838224083185196, 0.991743266582489, -0.020513953641057014, 0.8469746112823486, -0.3263065218925476, 0.32752013206481934, 0.06199650466442108, -0.25503942370414734, -0.06426270306110382, -0.054490767419338226, 0.982328474521637, 0.15956541895866394, 0.04970501735806465, -0.27481338381767273, 0.23421965539455414, 0.30147749185562134, 0.747488260269165, -0.46903231739997864, 0.16181759536266327, -0.041498687118291855, 0.056704867631196976, -0.9841556549072266, 0.017749551683664322, 0.14756521582603455, -0.22544756531715393, -0.8337231874465942, -0.48134520649909973, 0.024706074967980385, 0.13338515162467957, 0.0015116985887289047, 0.6001701951026917, 0.47933512926101685, -0.6262904405593872, -0.5257245898246765, 0.4158400893211365, 0.15986143052577972, 0.691771924495697, 0.2158391922712326, -0.0926082506775856, 0.011573733761906624, -0.07388503104448318, 0.9861070513725281, -0.11586035788059235, 0.602049708366394, -0.4677243232727051, -0.2943362295627594, -0.41899874806404114, -0.3956971764564514, -0.06426925212144852, -0.05448075756430626, 0.9823279976844788, 0.1595783829689026, 0.04967666417360306, 0.8470733165740967, -0.32620829343795776, 0.3273952007293701, 0.06201716139912605, -0.25499242544174194, -0.45361119508743286, 0.1982090324163437, 0.5648705363273621, -0.659990668296814, 0.01684524491429329], [5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1], [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75], [-0.06928084790706635, 0.009916311129927635, 0.08646398037672043, -0.006437735166400671, 0.06931018829345703, 0.10731283575296402, -0.0713353231549263, -0.09997757524251938, 0.044224679470062256, 0.1301191747188568, 0.07082317024469376, -0.11029086261987686, 0.06929231435060501, -0.006437124218791723, -0.009919529780745506], [(0.0, 0.1), (0.0, 0.1), (0.0, 0.1), (0.0, 0.1), (0.0, 0.1)])
lpi.names=["i0","i1","i2","i3","i4","i5"]
lpi.deserialize()
dims = 5

print("frist try...")
res = lpi.minimize(np.array([0.0,0.0,0.0,0.0,1.0]))
print(res)

vec = np.ones((dims, ), dtype=float)
print("Trying other vectors...")
res = lpi.minimize(vec)
print(res)
res = lpi.minimize(np.array([1.0,0.0,0.0,0.0,0.0]))
print(res)
res = lpi.minimize(np.array([0.0,1.0,0.0,0.0,0.0]))
print(res)

print("trying again...")
res = lpi.minimize(np.array([0.0,0.0,0.0,0.0,1.0]))
print(res)

print("-------------NEXT TRY")

res = lpi.minimize(np.array([1.0,0.0,0.0,0.0,0.0]))
print(res)
res = lpi.minimize(np.array([0.0,1.0,0.0,0.0,0.0]))
print(res)
res = lpi.minimize(np.array([0.0,0.0,1.0,0.0,0.0]))
print(res)
res = lpi.minimize(np.array([0.0,0.0,0.0,1.0,0.0]))
print(res)

print("trying again...")
res = lpi.minimize(np.array([0.0,0.0,0.0,0.0,1.0]))
print(res)
